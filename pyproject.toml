[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sudoku"
version = "0.0.1"
description = "asteroid game"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
readme = "README.md"
requires-python = ">=3.12"

# Optional, license (MIT for example)
license = { file = "LICENSE" }

# List your dependencies here (if you have any at this stage)
dependencies = []

# Optional classifiers for your project (Python versions, license, etc.)
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[project.urls]
homepage = "https://github.com/brinwiththevlin/sudoku"
repository = "https://github.com/brinwiththevlin/sudoku"

[project.optional-dependencies]
lint = ["flake8", "ruff", "black", "isort", "pyright", "mypy"]
test = ["coverage"]
doc = ["sphinx"]
build = ["build[virtualenv]==1.0.3"]
dev = [
    "tox",
    "pre-commit",
    "interrogate",
    "sudoku[lint]",
    "sudoku[test]",
    "sudoku[doc]",
    "sudoku[build]",

]

[tool.pyright]
# exclude = [".venv"]
include = ["src"]
# venvPath = "."
# venv = ".venv"
reportAny = "none"


[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120

[tool.coverage.run]
branch = true

[tool.coverage.report]
fail_under = 70
show_missing = true
skip_covered = true

[tool.interrogate]
fail-under = 70
ignore-module = true

[tool.ruff]
line-length = 120
src = ["src"]
extend-exclude = ["conf.py", "docs/", "tests/", "build/"]
target-version = "py38"
select = ["ALL"]
ignore = [
    "COM812", # Conflicts with the formatter
    "ISC001", # Conflicts with the formatter
    "ANN", # "missing-type-self"
    "PT001",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT004",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT005",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "PT023",  # https://github.com/astral-sh/ruff/issues/8796#issuecomment-1825907715
    "FA102",
    "G004",
    "EM102",
    "TRY003",
    "TD003",
    "FIX002"
]

[tool.ruff.per-file-ignores]
"tests/**" = [
    "S101", # Use of `assert` detected
    "D103", # Missing docstring in public function
]
"**/__init__.py" = [
    "F401", # Imported but unused
    "F403", # Wildcard imports
]
"docs/**" = [
    "INP001", # Requires __init__.py but docs folder is not a package.
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`(https://github.com/astral-sh/ruff/issues/5434)
keep-runtime-typing = true

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
disallow_untyped_defs = true # Functions need to be annotated
warn_unused_ignores = true
exclude = [
    "my-project-\\d+", # Ignore temporary folder created by setuptools when building an sdist
    "build/",
    "dist/",
    "docs/",
    "tests/",
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
